import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn import metrics
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LinearRegression
from  sklearn.linear_model import LogisticRegression
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import f1_score,accuracy_score,plot_roc_curve,roc_auc_score,confusion_matrix

df = pd.read_csv("https://raw.githubusercontent.com/ramkiramanathan/SVM_2/main/Breast_Cancer_Dataset")
df.head()

df.columns

df.dtypes

df.isnull().sum()

df.isna().sum()

df.Class.unique()

ax = df[df['Class'] ==1][:50].plot(kind='scatter', x='Clump Thickness', y='Uniformity of Cell Size', color='DarkBlue', label='malignant');
df[df['Class'] ==0][:50].plot(kind='scatter', x='Clump Thickness', y='Uniformity of Cell Size', color='Yellow', label='benign', ax=ax);
plt.show() 

feature_df = df[['Clump Thickness', 'Uniformity of Cell Size','Uniformity of Cell Shape', 'Marginal Adhesion','Single Epithelial Cell Size', 'Bare Nuclei', 'Bland Chromatin','Normal Nucleoli', 'Mitoses']]
X = np.asarray(feature_df)
X[:5]
df['Class'] = df['Class'].astype('int')
y = np.asarray(df['Class'])
y [:5]

X_train, X_test, y_train, y_test = train_test_split( X, y, test_size=0.2, random_state=4)
print ('Train set:', X_train.shape,  y_train.shape)
print ('Test set:', X_test.shape,  y_test.shape)

from sklearn import svm
clf = svm.SVC(kernel='rbf', gamma='scale') # change kernal and check diff scores
clf.fit(X_train, y_train)

yhat = clf.predict(X_test)
yhat[:5]

from sklearn.metrics import classification_report, confusion_matrix
import itertools

clf.score(X_test, y_test)

clf.predict([[3,1,2,1,2,1,2,1,1]])

